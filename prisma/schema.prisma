// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User{
  id Int @default(autoincrement()) @id
  userid String @unique @default(uuid())
  firstname String
  lastname String
  username String @unique
  email String @unique
  phonenumber String @unique
  password String
  role String @default("Engineer")
  KRAPin String @unique 
  createdAt DateTime @default(now())  // Admin,Engineer,Project Manager
  lastLogin DateTime?
  updatedAt DateTime @updatedAt
  projects ProjectUserLink[]
}

model BlacklistedTokens{

id Int @id @default(autoincrement())
token String @unique
blackListedAt DateTime @default(now())
}


model Project {
  id Int @default(autoincrement()) @id
  projectId String @unique @default(uuid())
  projectName String
  description String
  clientName String
  projectedCost Float
  isAssigned Boolean
  status String @default("ongoing")
  startDate DateTime
  endDate DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users ProjectUserLink[]
}

model ProjectUserLink{
  id Int @default(autoincrement()) @id
  userID String
  projectID String
  assignedAt DateTime @default(now())

  user User @relation(fields: [userID], references: [userid])
  project Project @relation(fields: [projectID],references: [projectId])

  @@unique([userID,projectID])
}

// CRM MODELS 

model Customer {
  id           Int        @id @default(autoincrement())
  name         String
  email        String     @unique
  phone        String?
  companyName  String?
  address      String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  leads        Lead[]
  interactions Interaction[]
}

model Lead {
  id           Int        @id @default(autoincrement())
  customerId   Int
  status       String     @default("PENDING") 
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  customer     Customer   @relation(fields: [customerId], references: [id])
  interactions Interaction[]
}

model Interaction {
  id        Int      @id @default(autoincrement())
  leadId    Int
  type      String  
  details   String?
  createdAt DateTime @default(now())
  lead      Lead     @relation(fields: [leadId], references: [id])

  Customer Customer[]
}



